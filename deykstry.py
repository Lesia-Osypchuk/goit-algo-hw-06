def dijkstra(graph, start):
    # Ініціалізація відстаней та множини невідвіданих вершин
    distances = {vertex: float('infinity') for vertex in graph}
    distances[start] = 0
    unvisited = list(graph.keys())

    while unvisited:
        # Знаходження вершини з найменшою відстанню серед невідвіданих
        current_vertex = min(unvisited, key=lambda vertex: distances[vertex])

        # Якщо поточна відстань є нескінченністю, то ми завершили роботу
        if distances[current_vertex] == float('infinity'):
            break

        for neighbor, weight in graph[current_vertex].items():
            distance = distances[current_vertex] + weight

            # Якщо нова відстань коротша, то оновлюємо найкоротший шлях
            if distance < distances[neighbor]:
                distances[neighbor] = distance

        # Видаляємо поточну вершину з множини невідвіданих
        unvisited.remove(current_vertex)

    return distances

# Задаємо граф метро міста Києва з вагами на ребрах
metro_graph_with_weights = {
    "Шулявська": {"Політехнічний інститут": 3},
    "Політехнічний інститут": {"Шулявська": 3, "Вокзальна": 2},
    "Вокзальна": {"Політехнічний інститут": 2, "Університет": 2},
    "Університет": {"Вокзальна": 2, "Театральна / Золоті ворота": 3},
    "Театральна / Золоті ворота": {"Університет": 3, "Хрещатик / Майдан незалежності": 1, "Лук'янівська": 5, "Палац спорту / Площа українських героїв": 4},
    "Хрещатик / Майдан незалежності": {"Театральна / Золоті ворота": 1, "Арсенальна": 2, "Поштова Площа": 2,  "Палац спорту / Площа українських героїв": 3},
    "Арсенальна": {"Хрещатик / Майдан незалежності": 2, "Дніпро": 4},
    "Дніпро": {"Арсенальна": 4, "Гідропарк": 5},
    "Гідропарк": {"Дніпро": 5},
    "Дорогожичі": {"Лук'янівська": 2},
    "Лук'янівська": {"Театральна / Золоті ворота": 5, "Дорогожичі": 2},
    "Палац спорту / Площа українських героїв": {"Театральна / Золоті ворота": 4, "Кловська": 3, "Олімпійська": 2},
    "Кловська": {"Палац спорту / Площа українських героїв": 3, "Печерська": 2},
    "Печерська": {"Кловська": 2, "Звіринецька": 3},
    "Звіринецька": {"Печерська": 3, "Видубичі": 4},
    "Видубичі": {"Звіринецька": 4},
    "Поштова Площа": {"Хрещатик / Майдан незалежності": 2, "Контрактова Площа": 1},
    "Контрактова Площа": {"Поштова Площа": 1},
    "Олімпійська": {"Палац спорту / Площа українських героїв": 2, "Палац Україна": 2},
    "Палац Україна": {"Олімпійська": 2}
}

# Задаємо стартову вершину
start_vertex = "Шулявська"

# Знаходимо найкоротші шляхи від стартової вершини до всіх інших вершин
shortest_paths = {vertex: dijkstra(metro_graph_with_weights, vertex)[start_vertex] for vertex in metro_graph_with_weights}

# Виводимо результати
for vertex, distance in shortest_paths.items():
    print(f"Найкоротший шлях з {start_vertex} до {vertex}: {distance}")






